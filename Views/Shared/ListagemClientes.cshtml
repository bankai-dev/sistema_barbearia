<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agendamentos</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/lib/sweetalert2/sweetalert2.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .header {
            background-color: #5a0a1a;
            color: white;
            padding: 10px;
            text-align: left;
            margin-bottom: 20px;
        }

        .agendamentos-table {
            table-layout: fixed;
            border-collapse: collapse;
            width: 100%;
        }

        .table-wrapper {
            max-height: 400px;
            overflow-y: auto;
        }

        .table-cell {
            padding: 5px;
            word-break: break-word;
            max-width: 200px;
            overflow-y: auto;
            max-height: 200px;
            position: relative;
        }

        .card {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 10px;
            margin: 10px;
            width: 120px;
            height: 80px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            font-size: 14px;
            display: inline-block;
            text-align: center;
        }

        .card button {
            font-size: 12px;
            padding: 5px 10px;
            margin-left: 5px;
            background-color: gray;
            border: none;
            color: #ffffff;
        }

        .card button:hover {
            text-decoration: dotted;
        }

        .card-attribute {
            font-weight: bold;
            display: block;
            font-size: 0.7em;
        }

        .status-disponivel {
            background-color: #28a745;
            /* Verde */
            color: white;
        }

        .status-reservado {
            background-color: #dc3545;
            /* Vermelho */
            color: white;
        }

        .action-buttons {
            position: absolute;
            top: 0;
            right: 0;
            padding: 5px;
        }

        .cut-type-value {
            display: inline-block;
            margin-left: 10px;
            font-weight: bold;
        }

        #logoutButton {
            background-color: white; 
            color: red; 
            border: none; 
            padding: 10px 20px; 
            font-size: 16px;
            cursor: pointer; 
            border-radius: 5px; 
            margin-left: 95%;
            margin-top: -5%;
        }
    </style>
</head>

<body>
    <div class="header">
        <h1 style="margin-left: 30px;">Barbearia do Mendes</h1>
        <button id="logoutButton" class="btn btn-danger">Logout</button>
    </div>

    <div class="container">
        <div class="table-wrapper">
            <table class="table table-striped table-bordered agendamentos-table">
                <thead>
                    <tr>
                        <th>Horário</th>
                        <th>Segunda-feira</th>
                        <th>Terça-feira</th>
                        <th>Quarta-feira</th>
                        <th>Quinta-feira</th>
                        <th>Sexta-feira</th>
                        <th>Sábado</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Linhas de horários -->
                    <script>
                        for (let hour = 7; hour < 19; hour++) {
                            for (let min = 0; min < 60; min += 30) {
                                let time = ('0' + hour).slice(-2) + ':' + ('0' + min).slice(-2);
                                document.write('<tr>');
                                document.write('<td>' + time + '</td>');
                                for (let day = 0; day < 6; day++) {
                                    document.write('<td class="table-cell" data-time="' + time + '" data-day="' + day + '"></td>');
                                }
                                document.write('</tr>');
                            }
                        }
                    </script>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="scheduleModal" tabindex="-1" aria-labelledby="scheduleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="scheduleModalLabel">Agendar Corte</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="selectedTime"></p>
                    <label for="cutType" class="form-label">Tipo de Corte:</label>
                    <select id="cutType" class="form-select">
                        <option value="25" data-description="Disfarçado">Disfarçado </option>
                        <option value="35" data-description="Corte com barba">Corte com barba</option>
                        <option value="15" data-description="Barba">Barba</option>
                    </select>
                    <span id="cutValue" class="cut-type-value">$30</span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-primary" id="confirmSchedule">Confirmar Agendamento</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let userId = localStorage.getItem('userId');;

        if (!userId) {
            alert('ID do usuário não encontrado. Por favor, faça login novamente.');
            window.location.href = '/Account/Login';
        }

        $(document).ready(function () {
            $('td.table-cell').each(function () {
                const card = $('<div class="card status-disponivel">')
                    .append('<p class="card-attribute">Disponível</p>')
                    .append('<button class="btn btn-primary btn-sm" onclick="openScheduleModal(this)">Agendar</button>');
                $(this).append(card);
            });

            $('#cutType').on('change', function () {
                $('#cutValue').text('$' + $(this).val());
            });

            $('#confirmSchedule').on('click', function () {
                const parentCell = $('.modal').data('parentCell');
                const time = parentCell.data('time');
                const day = parentCell.data('day');

                const horario = calculateDateTime(time, day);
                const tipoCorte = $('#cutType').val();
                const tipoCorteDescription = $('#cutType option:selected').data('description');

                const agendamentoDto = {
                    TipoCorte: tipoCorteDescription,
                    Horario: horario
                };

                $.ajax({
                    url: `http://localhost:5078/api/Agendamento?userId=${userId}`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(agendamentoDto),
                    success: function (response) {
                        Swal.fire({
                            title: 'Sucesso!',
                            text: 'Agendamento realizado com sucesso!',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            parentCell.find('.card').removeClass('status-disponivel').addClass('status-reservado');
                            parentCell.find('.card-attribute').text('Reservado');
                            parentCell.find('button').prop('disabled', true).removeClass('btn-primary').addClass('btn-secondary');
                            $('#scheduleModal').modal('hide');
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log(xhr.error);
                        console.log(error);
                        alert('Erro ao criar agendamento: ' + xhr.responseText);
                    }
                });
            });
            $('#logoutButton').on('click', function () {
                localStorage.removeItem('userId');
                window.location.href = 'api/Account/Login';
            });
        });

        function openScheduleModal(button) {
            const parentCell = $(button).closest('.table-cell');
            const time = parentCell.data('time');
            const day = parentCell.data('day');
            $('#selectedTime').text(`Horário: ${time}, Dia: ${day}`);
            $('.modal').data('parentCell', parentCell);
            $('#scheduleModal').modal('show');
        }

        function calculateDateTime(time, day) {
            const daysOfWeek = ['2024-06-17', '2024-06-18', '2024-06-19', '2024-06-20', '2024-06-21', '2024-06-22'];
            return daysOfWeek[day] + 'T' + time + ':00';
        }
    </script>

    @* <script>
    let userId = localStorage.getItem('userId');

    if (!userId) {
    alert('ID do usuário não encontrado. Por favor, faça login novamente.');
    window.location.href = '/Account/Login';
    }

    $(document).ready(function () {
    $.ajax({
    url: 'http://localhost:5078/api/Agendamento',
    type: 'GET',
    success: function (agendamentos) {
    console.log(agendamentos); // Verifique a estrutura de `agendamentos`
    if (!Array.isArray(agendamentos)) {
    console.error('Agendamentos não é um array');
    return;
    }

    $('td.table-cell').each(function () {
    const cell = $(this);
    const time = cell.data('time');
    const day = cell.data('day');
    const horario = calculateDateTime(time, day);

    const agendamento = agendamentos.find(a => new Date(a.horario).toISOString() === new Date(horario).toISOString());

    const card = $('<div class="card">')
    .append(`<p class="card-attribute">${agendamento ? 'Reservado' : 'Disponível'}</p>`)
    .append(`<button class="btn ${agendamento ? 'btn-secondary' : 'btn-primary'} btn-sm" ${agendamento ? 'disabled' :
    ''} onclick="openScheduleModal(this)">Agendar</button>`);

    if (agendamento) {
    card.addClass('status-reservado');
    } else {
    card.addClass('status-disponivel');
    }

    cell.append(card);
    });
    },
    error: function (xhr, status, error) {
    console.log(error);
    alert('Erro ao carregar agendamentos: ' + xhr.responseText);
    }
    });

    $('#cutType').on('change', function () {
    $('#cutValue').text('$' + $(this).val());
    });

    $('#confirmSchedule').on('click', function () {
    const parentCell = $('.modal').data('parentCell');
    const time = parentCell.data('time');
    const day = parentCell.data('day');

    const horario = calculateDateTime(time, day);
    const tipoCorte = $('#cutType').val();
    const tipoCorteDescription = $('#cutType option:selected').data('description');

    const agendamentoDto = {
    TipoCorte: tipoCorteDescription,
    Horario: horario
    };

    $.ajax({
    url: `http://localhost:5078/api/Agendamento?userId=${userId}`,
    type: 'POST',
    contentType: 'application/json',
    data: JSON.stringify(agendamentoDto),
    success: function (response) {
    Swal.fire({
    title: 'Sucesso!',
    text: 'Agendamento realizado com sucesso!',
    icon: 'success',
    confirmButtonText: 'OK'
    }).then(() => {
    parentCell.find('.card').removeClass('status-disponivel').addClass('status-reservado');
    parentCell.find('.card-attribute').text('Reservado');
    parentCell.find('button').prop('disabled', true).removeClass('btn-primary').addClass('btn-secondary');
    $('#scheduleModal').modal('hide');
    });
    },
    error: function (xhr, status, error) {
    console.log(xhr.error);
    console.log(error);
    alert('Erro ao criar agendamento: ' + xhr.responseText);
    }
    });
    });

    $('#logoutButton').on('click', function () {
    localStorage.removeItem('userId');
    window.location.href = 'api/Account/Login';
    });
    });

    function openScheduleModal(button) {
    const parentCell = $(button).closest('.table-cell');
    const time = parentCell.data('time');
    const day = parentCell.data('day');
    $('#selectedTime').text(`Horário: ${time}, Dia: ${day}`);
    $('.modal').data('parentCell', parentCell);
    $('#scheduleModal').modal('show');
    }

    function calculateDateTime(time, day) {
    const daysOfWeek = ['2024-06-17', '2024-06-18', '2024-06-19', '2024-06-20', '2024-06-21', '2024-06-22'];
    return daysOfWeek[day] + 'T' + time + ':00';
    }
    </script> *@

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>